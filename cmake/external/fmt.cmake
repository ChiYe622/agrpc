include(ExternalProject)

set(FMT_PREFIX_DIR ${THIRD_PARTY_PATH}/fmt)
set(FMT_SOURCE_DIR ${THIRD_PARTY_PATH}/fmt/src/extern_fmt)
set(FMT_INSTALL_DIR ${THIRD_PARTY_PATH}/install/fmt)
set(FMT_INCLUDE_DIR
    "${FMT_INSTALL_DIR}/include"
    CACHE PATH "fmt include directory." FORCE)
set(FMT_REPOSITORY ${GIT_URL}/fmtlib/fmt.git)
set(FMT_TAG 8.0.1)

if(WIN32)
  set(FMT_LIBRARIES
      "${FMT_INSTALL_DIR}/lib/fmt.lib"
      CACHE FILEPATH "fmt library." FORCE)
  set(FMT_CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4267 /wd4530")
else()
  set(FMT_LIBRARIES
      "${FMT_INSTALL_DIR}/lib/libfmt.a"
      CACHE FILEPATH "fmt library." FORCE)
  set(FMT_CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
endif()

include_directories(${FMT_INCLUDE_DIR})

cache_third_party(
  extern_fmt
  REPOSITORY ${FMT_REPOSITORY}
  TAG ${FMT_TAG}
  DIR FMT_SOURCE_DIR)

ExternalProject_Add(
  extern_fmt
  ${EXTERNAL_PROJECT_LOG_ARGS} ${SHALLOW_CLONE} ${FMT_DOWNLOAD_CMD}
  PREFIX ${FMT_PREFIX_DIR}
  SOURCE_DIR ${FMT_SOURCE_DIR}
  CMAKE_ARGS -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
             -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
             -DCMAKE_CXX_FLAGS=${GLOG_CMAKE_CXX_FLAGS}
             -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
             -DCMAKE_CXX_FLAGS_DEBUG=${CMAKE_CXX_FLAGS_DEBUG}
             -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
             -DCMAKE_C_FLAGS_DEBUG=${CMAKE_C_FLAGS_DEBUG}
             -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
             -DCMAKE_INSTALL_PREFIX=${FMT_INSTALL_DIR}
             -DCMAKE_INSTALL_LIBDIR=${FMT_INSTALL_DIR}/lib
             -DCMAKE_POSITION_INDEPENDENT_CODE=ON
             -DFMT_DOC=OFF
             -DFMT_TEST=OFF
             -DCMAKE_BUILD_TYPE=${THIRD_PARTY_BUILD_TYPE}
             ${EXTERNAL_OPTIONAL_ARGS}
  CMAKE_CACHE_ARGS
    -DCMAKE_INSTALL_PREFIX:PATH=${FMT_INSTALL_DIR}
    -DCMAKE_INSTALL_LIBDIR:PATH=${FMT_INSTALL_DIR}/lib
    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
    -DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
  BUILD_BYPRODUCTS ${FMT_LIBRARIES})

add_library(fmt STATIC IMPORTED GLOBAL)
set_property(TARGET fmt PROPERTY IMPORTED_LOCATION ${FMT_LIBRARIES})
add_dependencies(fmt extern_fmt)
